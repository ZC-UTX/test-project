// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: works.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListWorksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Desc           string `protobuf:"bytes,2,opt,name=Desc,proto3" json:"Desc,omitempty"`
	MusicId        int64  `protobuf:"varint,3,opt,name=MusicId,proto3" json:"MusicId,omitempty"`
	WorkType       string `protobuf:"bytes,4,opt,name=WorkType,proto3" json:"WorkType,omitempty"`
	IpAddress      string `protobuf:"bytes,5,opt,name=IpAddress,proto3" json:"IpAddress,omitempty"`
	WorkPermission string `protobuf:"bytes,6,opt,name=WorkPermission,proto3" json:"WorkPermission,omitempty"`
	Page           int64  `protobuf:"varint,7,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize       int64  `protobuf:"varint,8,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	UserId         int64  `protobuf:"varint,9,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *ListWorksReq) Reset() {
	*x = ListWorksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_works_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorksReq) ProtoMessage() {}

func (x *ListWorksReq) ProtoReflect() protoreflect.Message {
	mi := &file_works_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorksReq.ProtoReflect.Descriptor instead.
func (*ListWorksReq) Descriptor() ([]byte, []int) {
	return file_works_proto_rawDescGZIP(), []int{0}
}

func (x *ListWorksReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListWorksReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ListWorksReq) GetMusicId() int64 {
	if x != nil {
		return x.MusicId
	}
	return 0
}

func (x *ListWorksReq) GetWorkType() string {
	if x != nil {
		return x.WorkType
	}
	return ""
}

func (x *ListWorksReq) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *ListWorksReq) GetWorkPermission() string {
	if x != nil {
		return x.WorkPermission
	}
	return ""
}

func (x *ListWorksReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListWorksReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListWorksReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ListWorksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg   string  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Lists []*List `protobuf:"bytes,3,rep,name=Lists,proto3" json:"Lists,omitempty"`
	Count int64   `protobuf:"varint,4,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *ListWorksResp) Reset() {
	*x = ListWorksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_works_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorksResp) ProtoMessage() {}

func (x *ListWorksResp) ProtoReflect() protoreflect.Message {
	mi := &file_works_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorksResp.ProtoReflect.Descriptor instead.
func (*ListWorksResp) Descriptor() ([]byte, []int) {
	return file_works_proto_rawDescGZIP(), []int{1}
}

func (x *ListWorksResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListWorksResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListWorksResp) GetLists() []*List {
	if x != nil {
		return x.Lists
	}
	return nil
}

func (x *ListWorksResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Desc           string `protobuf:"bytes,2,opt,name=Desc,proto3" json:"Desc,omitempty"`
	MusicId        int64  `protobuf:"varint,3,opt,name=MusicId,proto3" json:"MusicId,omitempty"`
	WorkType       string `protobuf:"bytes,4,opt,name=WorkType,proto3" json:"WorkType,omitempty"`
	IpAddress      string `protobuf:"bytes,5,opt,name=IpAddress,proto3" json:"IpAddress,omitempty"`
	WorkPermission string `protobuf:"bytes,6,opt,name=WorkPermission,proto3" json:"WorkPermission,omitempty"`
}

func (x *List) Reset() {
	*x = List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_works_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_works_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_works_proto_rawDescGZIP(), []int{2}
}

func (x *List) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *List) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *List) GetMusicId() int64 {
	if x != nil {
		return x.MusicId
	}
	return 0
}

func (x *List) GetWorkType() string {
	if x != nil {
		return x.WorkType
	}
	return ""
}

func (x *List) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *List) GetWorkPermission() string {
	if x != nil {
		return x.WorkPermission
	}
	return ""
}

type CreatedWorksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Desc           string `protobuf:"bytes,2,opt,name=Desc,proto3" json:"Desc,omitempty"`
	MusicId        int64  `protobuf:"varint,3,opt,name=MusicId,proto3" json:"MusicId,omitempty"`
	WorkType       string `protobuf:"bytes,4,opt,name=WorkType,proto3" json:"WorkType,omitempty"`
	IpAddress      string `protobuf:"bytes,5,opt,name=IpAddress,proto3" json:"IpAddress,omitempty"`
	WorkPermission string `protobuf:"bytes,6,opt,name=WorkPermission,proto3" json:"WorkPermission,omitempty"`
}

func (x *CreatedWorksReq) Reset() {
	*x = CreatedWorksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_works_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatedWorksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatedWorksReq) ProtoMessage() {}

func (x *CreatedWorksReq) ProtoReflect() protoreflect.Message {
	mi := &file_works_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatedWorksReq.ProtoReflect.Descriptor instead.
func (*CreatedWorksReq) Descriptor() ([]byte, []int) {
	return file_works_proto_rawDescGZIP(), []int{3}
}

func (x *CreatedWorksReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreatedWorksReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CreatedWorksReq) GetMusicId() int64 {
	if x != nil {
		return x.MusicId
	}
	return 0
}

func (x *CreatedWorksReq) GetWorkType() string {
	if x != nil {
		return x.WorkType
	}
	return ""
}

func (x *CreatedWorksReq) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *CreatedWorksReq) GetWorkPermission() string {
	if x != nil {
		return x.WorkPermission
	}
	return ""
}

type CreatedWorksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CreatedWorksResp) Reset() {
	*x = CreatedWorksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_works_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatedWorksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatedWorksResp) ProtoMessage() {}

func (x *CreatedWorksResp) ProtoReflect() protoreflect.Message {
	mi := &file_works_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatedWorksResp.ProtoReflect.Descriptor instead.
func (*CreatedWorksResp) Descriptor() ([]byte, []int) {
	return file_works_proto_rawDescGZIP(), []int{4}
}

func (x *CreatedWorksResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreatedWorksResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type DeleteWorksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *DeleteWorksReq) Reset() {
	*x = DeleteWorksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_works_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWorksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorksReq) ProtoMessage() {}

func (x *DeleteWorksReq) ProtoReflect() protoreflect.Message {
	mi := &file_works_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorksReq.ProtoReflect.Descriptor instead.
func (*DeleteWorksReq) Descriptor() ([]byte, []int) {
	return file_works_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteWorksReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteWorksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DeleteWorksResp) Reset() {
	*x = DeleteWorksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_works_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWorksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorksResp) ProtoMessage() {}

func (x *DeleteWorksResp) ProtoReflect() protoreflect.Message {
	mi := &file_works_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorksResp.ProtoReflect.Descriptor instead.
func (*DeleteWorksResp) Descriptor() ([]byte, []int) {
	return file_works_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteWorksResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteWorksResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type InfoWorksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *InfoWorksReq) Reset() {
	*x = InfoWorksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_works_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoWorksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoWorksReq) ProtoMessage() {}

func (x *InfoWorksReq) ProtoReflect() protoreflect.Message {
	mi := &file_works_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoWorksReq.ProtoReflect.Descriptor instead.
func (*InfoWorksReq) Descriptor() ([]byte, []int) {
	return file_works_proto_rawDescGZIP(), []int{7}
}

func (x *InfoWorksReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type InfoWorksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *InfoWorksResp) Reset() {
	*x = InfoWorksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_works_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoWorksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoWorksResp) ProtoMessage() {}

func (x *InfoWorksResp) ProtoReflect() protoreflect.Message {
	mi := &file_works_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoWorksResp.ProtoReflect.Descriptor instead.
func (*InfoWorksResp) Descriptor() ([]byte, []int) {
	return file_works_proto_rawDescGZIP(), []int{8}
}

func (x *InfoWorksResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InfoWorksResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UpdateWorksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	WorkPermission string `protobuf:"bytes,2,opt,name=workPermission,proto3" json:"workPermission,omitempty"`
	Title          string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Desc           string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	MusicId        int64  `protobuf:"varint,5,opt,name=music_id,json=musicId,proto3" json:"music_id,omitempty"`
	WorkType       string `protobuf:"bytes,6,opt,name=work_type,json=workType,proto3" json:"work_type,omitempty"`
}

func (x *UpdateWorksReq) Reset() {
	*x = UpdateWorksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_works_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorksReq) ProtoMessage() {}

func (x *UpdateWorksReq) ProtoReflect() protoreflect.Message {
	mi := &file_works_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorksReq.ProtoReflect.Descriptor instead.
func (*UpdateWorksReq) Descriptor() ([]byte, []int) {
	return file_works_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateWorksReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateWorksReq) GetWorkPermission() string {
	if x != nil {
		return x.WorkPermission
	}
	return ""
}

func (x *UpdateWorksReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateWorksReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UpdateWorksReq) GetMusicId() int64 {
	if x != nil {
		return x.MusicId
	}
	return 0
}

func (x *UpdateWorksReq) GetWorkType() string {
	if x != nil {
		return x.WorkType
	}
	return ""
}

type UpdateWorksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UpdateWorksResp) Reset() {
	*x = UpdateWorksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_works_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorksResp) ProtoMessage() {}

func (x *UpdateWorksResp) ProtoReflect() protoreflect.Message {
	mi := &file_works_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorksResp.ProtoReflect.Descriptor instead.
func (*UpdateWorksResp) Descriptor() ([]byte, []int) {
	return file_works_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateWorksResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateWorksResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type InfoWorksResp_Works struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Desc           string `protobuf:"bytes,2,opt,name=Desc,proto3" json:"Desc,omitempty"`
	MusicId        int64  `protobuf:"varint,3,opt,name=MusicId,proto3" json:"MusicId,omitempty"`
	WorkType       string `protobuf:"bytes,4,opt,name=WorkType,proto3" json:"WorkType,omitempty"`
	IpAddress      string `protobuf:"bytes,5,opt,name=IpAddress,proto3" json:"IpAddress,omitempty"`
	WorkPermission string `protobuf:"bytes,6,opt,name=WorkPermission,proto3" json:"WorkPermission,omitempty"`
	LikeCount      int32  `protobuf:"varint,7,opt,name=LikeCount,proto3" json:"LikeCount,omitempty"`
	CommentCount   int32  `protobuf:"varint,8,opt,name=CommentCount,proto3" json:"CommentCount,omitempty"`
	ShareCount     int32  `protobuf:"varint,9,opt,name=ShareCount,proto3" json:"ShareCount,omitempty"`
	CollectCount   int32  `protobuf:"varint,10,opt,name=CollectCount,proto3" json:"CollectCount,omitempty"`
	BrowseCount    int32  `protobuf:"varint,11,opt,name=BrowseCount,proto3" json:"BrowseCount,omitempty"`
}

func (x *InfoWorksResp_Works) Reset() {
	*x = InfoWorksResp_Works{}
	if protoimpl.UnsafeEnabled {
		mi := &file_works_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoWorksResp_Works) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoWorksResp_Works) ProtoMessage() {}

func (x *InfoWorksResp_Works) ProtoReflect() protoreflect.Message {
	mi := &file_works_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoWorksResp_Works.ProtoReflect.Descriptor instead.
func (*InfoWorksResp_Works) Descriptor() ([]byte, []int) {
	return file_works_proto_rawDescGZIP(), []int{8, 0}
}

func (x *InfoWorksResp_Works) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InfoWorksResp_Works) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *InfoWorksResp_Works) GetMusicId() int64 {
	if x != nil {
		return x.MusicId
	}
	return 0
}

func (x *InfoWorksResp_Works) GetWorkType() string {
	if x != nil {
		return x.WorkType
	}
	return ""
}

func (x *InfoWorksResp_Works) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *InfoWorksResp_Works) GetWorkPermission() string {
	if x != nil {
		return x.WorkPermission
	}
	return ""
}

func (x *InfoWorksResp_Works) GetLikeCount() int32 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *InfoWorksResp_Works) GetCommentCount() int32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *InfoWorksResp_Works) GetShareCount() int32 {
	if x != nil {
		return x.ShareCount
	}
	return 0
}

func (x *InfoWorksResp_Works) GetCollectCount() int32 {
	if x != nil {
		return x.CollectCount
	}
	return 0
}

func (x *InfoWorksResp_Works) GetBrowseCount() int32 {
	if x != nil {
		return x.BrowseCount
	}
	return 0
}

var File_works_proto protoreflect.FileDescriptor

var file_works_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0xfc, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x44, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x6f,
	0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x57, 0x6f,
	0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x57, 0x6f,
	0x72, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x50, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x22, 0x0a, 0x05, 0x4c,
	0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x75, 0x73, 0x69,
	0x63, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4d, 0x75, 0x73, 0x69, 0x63,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x57, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb7, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x57, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x57, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x57, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x38,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x20, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x1e, 0x0a, 0x0c, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x64, 0x22, 0x8d, 0x03, 0x0a, 0x0d, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x1a, 0xd5, 0x02, 0x0a, 0x05,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44,
	0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x18, 0x0a, 0x07, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x6f, 0x72,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x57, 0x6f, 0x72,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x57, 0x6f, 0x72,
	0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x4c,
	0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x77, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x37, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xbe, 0x02, 0x0a, 0x05, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x12, 0x14, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a,
	0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x17, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3e, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x12,
	0x16, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x38, 0x0a, 0x09, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x14, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x49, 0x6e, 0x66,
	0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x16, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x03, 0x5a, 0x01, 0x2f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_works_proto_rawDescOnce sync.Once
	file_works_proto_rawDescData = file_works_proto_rawDesc
)

func file_works_proto_rawDescGZIP() []byte {
	file_works_proto_rawDescOnce.Do(func() {
		file_works_proto_rawDescData = protoimpl.X.CompressGZIP(file_works_proto_rawDescData)
	})
	return file_works_proto_rawDescData
}

var file_works_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_works_proto_goTypes = []any{
	(*ListWorksReq)(nil),        // 0: stream.ListWorksReq
	(*ListWorksResp)(nil),       // 1: stream.ListWorksResp
	(*List)(nil),                // 2: stream.List
	(*CreatedWorksReq)(nil),     // 3: stream.CreatedWorksReq
	(*CreatedWorksResp)(nil),    // 4: stream.CreatedWorksResp
	(*DeleteWorksReq)(nil),      // 5: stream.DeleteWorksReq
	(*DeleteWorksResp)(nil),     // 6: stream.DeleteWorksResp
	(*InfoWorksReq)(nil),        // 7: stream.InfoWorksReq
	(*InfoWorksResp)(nil),       // 8: stream.InfoWorksResp
	(*UpdateWorksReq)(nil),      // 9: stream.UpdateWorksReq
	(*UpdateWorksResp)(nil),     // 10: stream.UpdateWorksResp
	(*InfoWorksResp_Works)(nil), // 11: stream.InfoWorksResp.Works
}
var file_works_proto_depIdxs = []int32{
	2,  // 0: stream.ListWorksResp.Lists:type_name -> stream.List
	0,  // 1: stream.Works.ListWorks:input_type -> stream.ListWorksReq
	3,  // 2: stream.Works.CreatedWorks:input_type -> stream.CreatedWorksReq
	5,  // 3: stream.Works.DeleteWorks:input_type -> stream.DeleteWorksReq
	7,  // 4: stream.Works.InfoWorks:input_type -> stream.InfoWorksReq
	9,  // 5: stream.Works.UpdateWorks:input_type -> stream.UpdateWorksReq
	1,  // 6: stream.Works.ListWorks:output_type -> stream.ListWorksResp
	4,  // 7: stream.Works.CreatedWorks:output_type -> stream.CreatedWorksResp
	6,  // 8: stream.Works.DeleteWorks:output_type -> stream.DeleteWorksResp
	8,  // 9: stream.Works.InfoWorks:output_type -> stream.InfoWorksResp
	10, // 10: stream.Works.UpdateWorks:output_type -> stream.UpdateWorksResp
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_works_proto_init() }
func file_works_proto_init() {
	if File_works_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_works_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ListWorksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_works_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ListWorksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_works_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_works_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CreatedWorksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_works_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CreatedWorksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_works_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteWorksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_works_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteWorksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_works_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*InfoWorksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_works_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*InfoWorksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_works_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateWorksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_works_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateWorksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_works_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*InfoWorksResp_Works); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_works_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_works_proto_goTypes,
		DependencyIndexes: file_works_proto_depIdxs,
		MessageInfos:      file_works_proto_msgTypes,
	}.Build()
	File_works_proto = out.File
	file_works_proto_rawDesc = nil
	file_works_proto_goTypes = nil
	file_works_proto_depIdxs = nil
}
