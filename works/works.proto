syntax = "proto3";

package stream;

option go_package = "/";

message ListWorksReq {
  string Title = 1;
  string Desc = 2;
  int64 MusicId = 3;
  string WorkType = 4;
  string IpAddress = 5;
  string WorkPermission = 6;
  int64 Page = 7;
  int64 PageSize = 8;
  int64 UserId = 9;
}

message ListWorksResp {
  int64 code = 1;
  string msg = 2;
  repeated List Lists = 3;
  int64 Count = 4;
}

message List{
  string Title = 1;
  string Desc = 2;
  int64 MusicId = 3;
  string WorkType = 4;
  string IpAddress = 5;
  string WorkPermission = 6;
}

message CreatedWorksReq {
  string Title = 1;
  string Desc = 2;
  int64 MusicId = 3;
  string WorkType = 4;
  string IpAddress = 5;
  string WorkPermission = 6;
}

message CreatedWorksResp {
  int64 code = 1;
  string msg = 2;
}

message DeleteWorksReq {
  int64 Id = 1;
}

message DeleteWorksResp {
  int64 code = 1;
  string msg = 2;
}

message InfoWorksReq {
  int64 Id = 1;
}

message InfoWorksResp {
  int64 code = 1;
  string msg = 2;
  message Works{
    string Title = 1;
    string Desc = 2;
    int64 MusicId = 3;
    string WorkType = 4;
    string IpAddress = 5;
    string WorkPermission = 6;
    int32 LikeCount = 7;
    int32 CommentCount = 8;
    int32 ShareCount = 9;
    int32 CollectCount = 10;
    int32 BrowseCount = 11;
  }
}

message UpdateWorksReq {
  int64 Id = 1;
  string workPermission = 2;
  string title = 3;
  string desc = 4;
  int64 music_id = 5;
  string work_type = 6;
}

message UpdateWorksResp {
  int64 code = 1;
  string msg = 2;
}

service Works {
  rpc ListWorks(ListWorksReq) returns (ListWorksResp);
  rpc CreatedWorks(CreatedWorksReq) returns (CreatedWorksResp);
  rpc DeleteWorks(DeleteWorksReq) returns (DeleteWorksResp);
  rpc InfoWorks(InfoWorksReq) returns (InfoWorksResp);
  rpc UpdateWorks(UpdateWorksReq) returns (UpdateWorksResp);
}